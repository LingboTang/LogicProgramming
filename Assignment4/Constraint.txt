What is Constraint Programming?

Constraint programming is the study of computational models and systems based on constraints.
The idea is to model and sovle a problem by exploring the constraints that can fully characterize
the problem, hence any solution of the problem must satisfy all of the stated constraints.
Constraint programming is one of the most exciting developments in programming languages in the 
last decade. It is attracting widespread commercial interest and is now becoming the method of choice
of modeling any types of optimization problems.


Constraints have recently emerged as a research area that combines researchers from a 
number of fields, including Artificial Intelligence, Programming Languages, 
Symbolic Computing and Computational Logic. Constraint networks and constraint satisfaction 
problems have been studied in Artificial Intelligence starting from the seventies. 
Systematic use of constraints in programming has started in the eighties. In constraint 
programming the programming process consists of the generation of requirements (constraints) 
and solution of these requirements, by specialized constraint solvers.


Constraint programming is intended to solve computationally hard problems. These are combinatorial 
problems, graph-theoretic problems, optimization problems, and problems involving scheduling and planning.


Constraint programming has been successfully applied in numerous domains. Recent applications include 
computer graphics (to express geometric coherence in the case of scene analysis), natural language 
processing (construction of efficient parsers), database systems (to ensure and/or restore consistency 
of the data), operations research problems (like optimization problems), molecular biology (DNA sequencing), 
business applications (option trading), electrical engineering (to locate faults), circuit design (to compute layouts), etc.